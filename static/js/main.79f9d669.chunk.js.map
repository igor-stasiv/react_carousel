{"version":3,"sources":["components/Carousel.js","App.js","index.js"],"names":["Carousel","state","translate","gap","listSize","props","images","length","itemWidth","carouselSize","frameSize","carouselStep","step","maxscroll","scrollRight","setState","prevState","scrollLeft","this","infinite","intervalId","setInterval","clearInterval","animationDuration","carouselStyle","width","listStyle","transform","transition","buttonsStyle","className","style","map","image","key","src","alt","height","type","disabled","onClick","React","Component","defaultProps","App","ReactDOM","render","document","getElementById"],"mappings":"kOAKMA,G,wNACJC,MAAQ,CACNC,UAAW,EACXC,IAAK,I,EAGPC,SAAW,EAAKC,MAAMC,OAAOC,OAAS,EAAKF,MAAMG,UAC7C,EAAKP,MAAME,IAAM,EAAKE,MAAMC,OAAOC,O,EAEvCE,aAAe,EAAKJ,MAAMK,UAAY,EAAKL,MAAMG,UAC7C,EAAKP,MAAME,IAAM,EAAKE,MAAMK,U,EAEhCC,aAAe,EAAKN,MAAMO,KAAO,EAAKP,MAAMG,UACxC,EAAKP,MAAME,IAAM,EAAKE,MAAMO,K,EAEhCC,UAAY,EAAKT,SAAW,EAAKK,a,EA6BjCK,YAAc,WACR,EAAKb,MAAMC,UAAY,EAAKS,eAAiB,EAAKE,UACpD,EAAKE,UAAS,SAAAC,GAAS,MAAK,CAC1Bd,UAAWc,EAAUd,UAAY,EAAKS,iBAGxC,EAAKI,SAAS,CAAEb,WAAY,EAAKW,a,EAIrCI,WAAa,WACP,EAAKhB,MAAMC,UAAY,EAAKS,aAAe,EAC7C,EAAKI,UAAS,SAAAC,GAAS,MAAK,CAC1Bd,UAAWc,EAAUd,UAAY,EAAKS,iBAGxC,EAAKI,SAAS,CAAEb,UAAW,K,uDA3C/B,WACMgB,KAAKb,MAAMc,WACbD,KAAKE,WAAaC,YAAYH,KAAKJ,YAAa,Q,gCAIpD,WACE,GAAII,KAAKb,MAAMc,SACb,OAAQD,KAAKjB,MAAMC,WACjB,KAAK,EACHoB,cAAcJ,KAAKE,YACnBF,KAAKE,WAAaC,YAAYH,KAAKJ,YAAa,KAChD,MACF,KAAMI,KAAKL,UACTS,cAAcJ,KAAKE,YACnBF,KAAKE,WAAaC,YAAYH,KAAKD,WAAY,Q,kCAQvD,WACEK,cAAcJ,KAAKE,c,oBAuBrB,WACE,MAA2BF,KAAKjB,MAAxBC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,IACnB,EAAiDe,KAAKb,MAA9CC,EAAR,EAAQA,OAAQE,EAAhB,EAAgBA,UAAWe,EAA3B,EAA2BA,kBACrBC,EAAgB,CACpBC,MAAOP,KAAKT,cAERiB,EAAY,CAChBC,UAAU,cAAD,OAAgBzB,EAAhB,OACTC,MACAyB,WAAW,aAAD,OAAeL,EAAf,OAENM,EAAe,CACnBJ,MAAOP,KAAKT,aAAeN,GAG7B,OACE,yBAAK2B,UAAU,WAAWC,MAAOP,GAC/B,wBACEM,UAAU,iBACVC,MAAOL,GAENpB,EAAO0B,KAAI,SAAAC,GAAK,OACf,wBAAIH,UAAU,iBAAiBI,IAAKD,GAClC,yBACEE,IAAKF,EACLG,IAAI,IACJC,OAAQ7B,EACRiB,MAAOjB,SAMf,yBACEsB,UAAU,oBACVC,MAAOF,GAEP,4BACES,KAAK,SACLR,UAAU,SACVS,SAAwB,IAAdrC,EACVsC,QAAStB,KAAKD,YAJhB,KAQA,4BACEqB,KAAK,SACLR,UAAU,SACVS,SAAUrC,KAAegB,KAAKL,UAC9B2B,QAAStB,KAAKJ,aAJhB,W,GA7Ga2B,IAAMC,YAoI7B1C,EAAS2C,aAAe,CACtB/B,KAAM,EACNF,UAAW,EACXF,UAAW,IACXe,kBAAmB,IACnBJ,UAAU,GAGGnB,QCvGA4C,E,4MApCb3C,MAAQ,CACNK,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iB,4CAIJ,WACE,IAAQA,EAAWY,KAAKjB,MAAhBK,OAER,OACE,yBAAKwB,UAAU,OAEb,6CAAmBxB,EAAOC,OAA1B,WAEA,kBAAC,EAAD,CACED,OAAQA,EACRM,KAAM,EACNF,UAAW,EACXF,UAAW,IACXe,kBAAmB,IACnBJ,UAAQ,S,GA9BAsB,IAAMC,WCDxBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.79f9d669.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Carousel.scss';\n\nclass Carousel extends React.Component {\n  state = {\n    translate: 0,\n    gap: 20,\n  };\n\n  listSize = this.props.images.length * this.props.itemWidth\n    + this.state.gap * this.props.images.length;\n\n  carouselSize = this.props.frameSize * this.props.itemWidth\n    + this.state.gap * this.props.frameSize;\n\n  carouselStep = this.props.step * this.props.itemWidth\n    + this.state.gap * this.props.step;\n\n  maxscroll = this.listSize - this.carouselSize;\n\n  componentDidMount() {\n    if (this.props.infinite) {\n      this.intervalId = setInterval(this.scrollRight, 3000);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.infinite) {\n      switch (this.state.translate) {\n        case 0:\n          clearInterval(this.intervalId);\n          this.intervalId = setInterval(this.scrollRight, 3000);\n          break;\n        case -this.maxscroll:\n          clearInterval(this.intervalId);\n          this.intervalId = setInterval(this.scrollLeft, 3000);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  scrollRight = () => {\n    if (this.state.translate - this.carouselStep >= -this.maxscroll) {\n      this.setState(prevState => ({\n        translate: prevState.translate - this.carouselStep,\n      }));\n    } else {\n      this.setState({ translate: -this.maxscroll });\n    }\n  }\n\n  scrollLeft = () => {\n    if (this.state.translate + this.carouselStep < 0) {\n      this.setState(prevState => ({\n        translate: prevState.translate + this.carouselStep,\n      }));\n    } else {\n      this.setState({ translate: 0 });\n    }\n  }\n\n  render() {\n    const { translate, gap } = this.state;\n    const { images, itemWidth, animationDuration } = this.props;\n    const carouselStyle = {\n      width: this.carouselSize,\n    };\n    const listStyle = {\n      transform: `translateX(${translate}px)`,\n      gap,\n      transition: `transform ${animationDuration}ms`,\n    };\n    const buttonsStyle = {\n      width: this.carouselSize - gap,\n    };\n\n    return (\n      <div className=\"carousel\" style={carouselStyle}>\n        <ul\n          className=\"carousel__list\"\n          style={listStyle}\n        >\n          {images.map(image => (\n            <li className=\"carousel__item\" key={image}>\n              <img\n                src={image}\n                alt=\"1\"\n                height={itemWidth}\n                width={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div\n          className=\"carousel__buttons\"\n          style={buttonsStyle}\n        >\n          <button\n            type=\"button\"\n            className=\"button\"\n            disabled={translate === 0}\n            onClick={this.scrollLeft}\n          >\n            &lt;\n          </button>\n          <button\n            type=\"button\"\n            className=\"button\"\n            disabled={translate === -this.maxscroll}\n            onClick={this.scrollRight}\n          >\n            &gt;\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nCarousel.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\n  step: PropTypes.number,\n  frameSize: PropTypes.number,\n  itemWidth: PropTypes.number,\n  animationDuration: PropTypes.number,\n  infinite: PropTypes.bool,\n};\n\nCarousel.defaultProps = {\n  step: 3,\n  frameSize: 3,\n  itemWidth: 130,\n  animationDuration: 1000,\n  infinite: false,\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\n\nimport Carousel from './components/Carousel';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\r\n\n        <Carousel\n          images={images}\n          step={3}\n          frameSize={3}\n          itemWidth={130}\n          animationDuration={1000}\n          infinite\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}